# Example values file for MongoDB with replica set AND S3 backups
# Deploy with: helm install my-mongodb ./save-the-mongoose -f examples/replication-and-backup.values.yaml

# Enable replica set with 3 members
replication:
  enabled: true
  replSetName: rs0
  replicaCount: 3
  readPreference: primaryPreferred

# MongoDB configuration
mongodb:
  auth:
    enabled: true
    rootUser: admin
    # For production, provide a strong password:
    # rootPassword: "YourSecurePassword123!"

  resources:
    limits:
      cpu: 2000m
      memory: 4Gi
    requests:
      cpu: 1000m
      memory: 2Gi

  persistence:
    enabled: true
    size: 20Gi
    # storageClass: "fast-ssd"

  config:
    oplogSizeMB: 2048
    wiredTigerCacheSizeGB: 2
    maxIncomingConnections: 200

# Enable S3 backups (daily at 2 AM UTC)
backup:
  enabled: true
  schedule: "0 2 * * *"

  s3:
    # For AWS S3:
    # endpoint: "s3.amazonaws.com"
    # region: "us-east-1"

    # For MinIO (local development):
    endpoint: "minio.default.svc.cluster.local:9000"
    region: "us-east-1"
    bucket: "mongodb-backups"
    prefix: ""
    forcePathStyle: true
    useSSL: false

    # S3 credentials (REQUIRED)
    # For production, use an existing secret instead:
    # existingSecret: "my-s3-credentials"
    accessKeyId: "minioadmin"
    secretAccessKey: "minioadmin"

  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 256Mi

  # Keep last 5 successful backups, 2 failed ones
  successfulJobsHistoryLimit: 5
  failedJobsHistoryLimit: 2

# Enable both primary and readonly services
service:
  primary:
    enabled: true
    type: ClusterIP
    port: 27017

  readonly:
    enabled: true
    type: ClusterIP
    port: 27017

# Pod anti-affinity to spread replicas across nodes
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: save-the-mongoose
            app.kubernetes.io/instance: my-mongodb
        topologyKey: kubernetes.io/hostname

# Pod labels
podLabels:
  environment: production
  database: mongodb
  replication: enabled
  backup: enabled
